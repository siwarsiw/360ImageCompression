import numpy as np
import numpy as numpy
import cv2

windowsize_r = 8
windowsize_c = 8
Sum = 0
Sum1 = 0
img = cv2.imread('7fB65.jpg')
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
H, W = gray.shape
N = int (H*W/8*8)
for r in range(0,gray.shape[0] - windowsize_r, windowsize_r):
    for c in range(0,gray.shape[0] - windowsize_c, windowsize_c):
        window = gray[r:r+windowsize_r,c:c+windowsize_c]
        hist = numpy.histogram(window,bins=256)
        Sum1 += gray[r][c]
        for i in range(window.shape[0]):
            for j in range(window.shape[1]):
                Sum += window[i][j]
                Li = Sum/Sum1
                Ti = int(Li*N*24)
mlist = []
for i in range (N):
    Ti = int(Li*N*24)
    if (Ti>24):
        Ti = 24
        E = Ti -24
    else:
        mlist.append(i)
for j in mlist:
    Li = Sum / Sum1
    Ti = Ti + E
//function
def CompressionBitAllocation(K,Li):
    mlist = []
    for i in range (N):
        Ti = int(Li*N*24)
        if (Ti>24):
            Ti = 24
            E = Ti -24
        else:
            mlist.append(i)
    for j in mlist:
        Li = Sum / Sum1
        Ti = Ti + E